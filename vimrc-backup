set nocompatible "no VI-compatible

"plugins {{{
call   plug#begin('~/AppData/Local/nvim/pluged')
    "status line
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'

    "git integration
    Plug 'tpope/vim-fugitive'

    "syntastic cheker
    Plug 'vim-syntastic/syntastic'
    Plug 'myint/syntastic-extras'

    "colorscheme
    Plug 'https://github.com/sainnhe/everforest'
call plug#end()
" }}}

"standard {{{
syntax on
set number relativenumber
set cursorline "highlight current line
set showcmd "show typing command in the last line of the screen
set hidden "change file without writing current
set autochdir "switch to current file's parent directory.
set mouse=a "enable mouse
set novisualbell "disable blinking
set t_vb= "disable sounds
set wrap nolist linebreak "not change the text but simply displays it on multiple lines when wrap
set path+=** "for search anywhere
set nobackup "disable backup files
set noswapfile "disable swap files
set ignorecase "ignore case when searching
set spelllang=en,ru,uk
"}}}

" indents {{{
set tabstop=4 "number of spaces that <Tab> in the file counts for
set shiftwidth=4
set smarttab "delete full indents with <backspace> in line start
set expandtab "use to spaces to insert a <Tab>
set autoindent "copy indent from current line
set backspace=indent,eol,start whichwrap+=<,>,[,]
"}}}

"diffent cursor among mods {{{
let &t_SI.="\e[5 q" "SI = режим вставки
let &t_SR.="\e[3 q" "SR = режим замены
let &t_EI.="\e[2 q" "EI = нормальный режим
"Где 1 - это мигающий прямоугольник
"2 - обычный прямоугольник
"3 - мигающее подчёркивание
"4 - просто подчёркивание
"5 - мигающая вертикальная черта
"6 - просто вертикальная черта
" }}}

" config airline {{{
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_section_z = "%p%% \ln:%l/%L Col:%c" "Кастомная графа положения курсора

let g:airline#extensions#branch#enabled=1
let g:airline#extensions#tabline#formatter='default'

set noshowmode " No show the mode you are on the last line(have in airline)
set shortmess-=S "match number while searching

let g:airline_theme='distinguished'
" }}}

"config syntastic cheker {{{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
"let g:syntastec_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] } "disable checker by default
let g:syntastic_check_on_wq = 0 "disable syntastic chek when wq
let g:syntastic_enable_highlighting = 0 "disable highlighting
"}}}

" folding in vim files{{{
augroup filtetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END
" }}}

"nnoremap {{{
nnoremap <space><space> :set nohlsearch!<CR>

nnoremap go o<Esc>
nnoremap gO O<Esc>

nnoremap <Down>  :resize -2<CR>
nnoremap <Left>  :vertical resize +2<CR>
nnoremap <Right> :vertical resize -2<CR>
nnoremap <Up>    :resize +2<CR>

nnoremap <C-w>   <C-w>w
nnoremap <C-j>   <C-w>j
nnoremap <C-k>   <C-w>k
nnoremap <C-h>   <C-w>h
nnoremap <C-l>   <C-w>l

nnoremap ;       q:k
nnoremap <A-L> :set spell!<CR>

nnoremap \\ :!gcc -std=c11 -Wall -Wextra -Werror -Wpedantic -o test.exe *.c <bar> ./test.exe <CR>

nnoremap <C-s>  :SyntasticToggleMode<CR>
"}}}

"{{{ inoremap
inoremap jj  <esc>
inoremap {<CR> {<CR>}<C-o>O
inoremap (( ()<left>
inoremap "" ""<left>
inoremap [[ []<left>
"}}}

"abbreviate {{{
abbreviate mainv main(void) {<CR>
       \<CR>return 0;<esc>2ko

abbreviate maina main(int argc, char **argv) {<CR>
       \<CR>return 0;<esc>2ko
"}}}

colorscheme everforest
